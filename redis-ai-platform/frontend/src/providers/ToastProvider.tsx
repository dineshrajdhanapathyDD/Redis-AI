import React, { ReactNode } from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { X, CheckCircle, AlertCircle, AlertTriangle, Info } from 'lucide-react';\nimport { useUIStore } from '../store';\nimport { Notification } from '../types';\n\ninterface ToastProviderProps {\n  children: ReactNode;\n}\n\nconst ToastIcon = ({ type }: { type: Notification['type'] }) => {\n  const iconProps = { size: 20 };\n  \n  switch (type) {\n    case 'success':\n      return <CheckCircle {...iconProps} className=\"text-success-500\" />;\n    case 'error':\n      return <AlertCircle {...iconProps} className=\"text-error-500\" />;\n    case 'warning':\n      return <AlertTriangle {...iconProps} className=\"text-warning-500\" />;\n    case 'info':\n    default:\n      return <Info {...iconProps} className=\"text-primary-500\" />;\n  }\n};\n\nconst Toast: React.FC<{ notification: Notification }> = ({ notification }) => {\n  const { removeNotification } = useUIStore();\n\n  const getBorderColor = (type: Notification['type']) => {\n    switch (type) {\n      case 'success':\n        return 'border-success-200';\n      case 'error':\n        return 'border-error-200';\n      case 'warning':\n        return 'border-warning-200';\n      case 'info':\n      default:\n        return 'border-primary-200';\n    }\n  };\n\n  const getBackgroundColor = (type: Notification['type']) => {\n    switch (type) {\n      case 'success':\n        return 'bg-success-50';\n      case 'error':\n        return 'bg-error-50';\n      case 'warning':\n        return 'bg-warning-50';\n      case 'info':\n      default:\n        return 'bg-primary-50';\n    }\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: -50, scale: 0.95 }}\n      animate={{ opacity: 1, y: 0, scale: 1 }}\n      exit={{ opacity: 0, y: -20, scale: 0.95 }}\n      transition={{ duration: 0.2 }}\n      className={`\n        max-w-sm w-full bg-white rounded-lg shadow-lg border-l-4 p-4\n        ${getBorderColor(notification.type)}\n      `}\n    >\n      <div className=\"flex items-start\">\n        <div className=\"flex-shrink-0\">\n          <ToastIcon type={notification.type} />\n        </div>\n        \n        <div className=\"ml-3 flex-1\">\n          <div className=\"flex items-center justify-between\">\n            <h4 className=\"text-sm font-medium text-secondary-900\">\n              {notification.title}\n            </h4>\n            <button\n              onClick={() => removeNotification(notification.id)}\n              className=\"ml-2 flex-shrink-0 text-secondary-400 hover:text-secondary-600 transition-colors\"\n            >\n              <X size={16} />\n            </button>\n          </div>\n          \n          <p className=\"mt-1 text-sm text-secondary-600\">\n            {notification.message}\n          </p>\n          \n          {notification.actions && notification.actions.length > 0 && (\n            <div className=\"mt-3 flex space-x-2\">\n              {notification.actions.map((action, index) => (\n                <button\n                  key={index}\n                  onClick={() => {\n                    action.action();\n                    removeNotification(notification.id);\n                  }}\n                  className={`\n                    px-3 py-1 text-xs font-medium rounded transition-colors\n                    ${\n                      action.style === 'primary'\n                        ? 'bg-primary-600 text-white hover:bg-primary-700'\n                        : 'bg-secondary-100 text-secondary-700 hover:bg-secondary-200'\n                    }\n                  `}\n                >\n                  {action.label}\n                </button>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport const ToastProvider: React.FC<ToastProviderProps> = ({ children }) => {\n  const { notifications } = useUIStore();\n\n  return (\n    <>\n      {children}\n      \n      {/* Toast Container */}\n      <div className=\"fixed top-4 right-4 z-50 space-y-2\">\n        <AnimatePresence>\n          {notifications.map((notification) => (\n            <Toast key={notification.id} notification={notification} />\n          ))}\n        </AnimatePresence>\n      </div>\n    </>\n  );\n};\n"