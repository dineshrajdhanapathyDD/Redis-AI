import React from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport {\n  Home,\n  Search,\n  Users,\n  Code,\n  FileText,\n  Settings,\n  ChevronLeft,\n  ChevronRight,\n  Zap,\n  Activity,\n  Brain,\n} from 'lucide-react';\nimport { useUIStore, useWebSocketStore } from '../../store';\nimport { useAuth } from '../../providers/AuthProvider';\n\nconst navigationItems = [\n  {\n    name: 'Dashboard',\n    href: '/',\n    icon: Home,\n    description: 'Overview and analytics',\n  },\n  {\n    name: 'Search',\n    href: '/search',\n    icon: Search,\n    description: 'Multi-modal AI search',\n  },\n  {\n    name: 'Workspace',\n    href: '/workspace',\n    icon: Users,\n    description: 'Collaborative AI workspace',\n  },\n  {\n    name: 'Code Intelligence',\n    href: '/code',\n    icon: Code,\n    description: 'AI-powered code analysis',\n  },\n  {\n    name: 'Content',\n    href: '/content',\n    icon: FileText,\n    description: 'Content generation & consistency',\n  },\n  {\n    name: 'Settings',\n    href: '/settings',\n    icon: Settings,\n    description: 'Application settings',\n  },\n];\n\nconst ConnectionStatus: React.FC = () => {\n  const { connection } = useWebSocketStore();\n  \n  const getStatusColor = () => {\n    if (connection.connected) return 'bg-success-500';\n    if (connection.reconnecting) return 'bg-warning-500';\n    return 'bg-error-500';\n  };\n  \n  const getStatusText = () => {\n    if (connection.connected) return 'Connected';\n    if (connection.reconnecting) return 'Reconnecting...';\n    return 'Disconnected';\n  };\n\n  return (\n    <div className=\"flex items-center space-x-2 px-3 py-2 text-xs text-secondary-600\">\n      <div className={`w-2 h-2 rounded-full ${getStatusColor()}`} />\n      <span>{getStatusText()}</span>\n    </div>\n  );\n};\n\nconst NavItem: React.FC<{\n  item: typeof navigationItems[0];\n  isCollapsed: boolean;\n}> = ({ item, isCollapsed }) => {\n  const location = useLocation();\n  const isActive = location.pathname === item.href || \n    (item.href !== '/' && location.pathname.startsWith(item.href));\n\n  return (\n    <NavLink\n      to={item.href}\n      className={({ isActive: linkActive }) => `\n        group relative flex items-center px-3 py-2 text-sm font-medium rounded-lg transition-all duration-200\n        ${linkActive || isActive\n          ? 'bg-primary-100 text-primary-700 border-r-2 border-primary-500'\n          : 'text-secondary-600 hover:bg-secondary-100 hover:text-secondary-900'\n        }\n      `}\n    >\n      <item.icon \n        size={20} \n        className={`flex-shrink-0 ${isActive ? 'text-primary-600' : 'text-secondary-400 group-hover:text-secondary-600'}`} \n      />\n      \n      {!isCollapsed && (\n        <motion.div\n          initial={{ opacity: 0, x: -10 }}\n          animate={{ opacity: 1, x: 0 }}\n          exit={{ opacity: 0, x: -10 }}\n          className=\"ml-3 flex-1\"\n        >\n          <div className=\"font-medium\">{item.name}</div>\n          <div className=\"text-xs text-secondary-500 mt-0.5\">\n            {item.description}\n          </div>\n        </motion.div>\n      )}\n      \n      {isCollapsed && (\n        <div className=\"absolute left-full ml-2 px-2 py-1 bg-secondary-900 text-white text-xs rounded opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none z-50\">\n          <div className=\"font-medium\">{item.name}</div>\n          <div className=\"text-secondary-300\">{item.description}</div>\n        </div>\n      )}\n    </NavLink>\n  );\n};\n\nexport const Sidebar: React.FC = () => {\n  const { sidebarOpen, setSidebarOpen } = useUIStore();\n  const { user } = useAuth();\n\n  return (\n    <>\n      {/* Desktop Sidebar */}\n      <div className={`\n        fixed top-0 left-0 z-30 h-full bg-white border-r border-secondary-200 transition-all duration-300\n        ${sidebarOpen ? 'w-64' : 'w-16'}\n      `}>\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-4 border-b border-secondary-200\">\n          {sidebarOpen && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"flex items-center space-x-2\"\n            >\n              <div className=\"w-8 h-8 bg-gradient-to-br from-primary-500 to-primary-700 rounded-lg flex items-center justify-center\">\n                <Brain className=\"w-5 h-5 text-white\" />\n              </div>\n              <div>\n                <h1 className=\"text-lg font-bold text-secondary-900\">Redis AI</h1>\n                <p className=\"text-xs text-secondary-500\">Platform</p>\n              </div>\n            </motion.div>\n          )}\n          \n          <button\n            onClick={() => setSidebarOpen(!sidebarOpen)}\n            className=\"p-1.5 rounded-lg hover:bg-secondary-100 transition-colors\"\n          >\n            {sidebarOpen ? (\n              <ChevronLeft size={18} className=\"text-secondary-600\" />\n            ) : (\n              <ChevronRight size={18} className=\"text-secondary-600\" />\n            )}\n          </button>\n        </div>\n\n        {/* Navigation */}\n        <nav className=\"flex-1 px-3 py-4 space-y-1\">\n          {navigationItems.map((item) => (\n            <NavItem key={item.name} item={item} isCollapsed={!sidebarOpen} />\n          ))}\n        </nav>\n\n        {/* System Status */}\n        {sidebarOpen && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"border-t border-secondary-200 p-3\"\n          >\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center justify-between text-xs text-secondary-600\">\n                <span>System Status</span>\n                <Activity size={14} className=\"text-success-500\" />\n              </div>\n              <ConnectionStatus />\n              <div className=\"flex items-center space-x-2 px-3 py-1 text-xs\">\n                <Zap size={12} className=\"text-primary-500\" />\n                <span className=\"text-secondary-600\">AI Models: Online</span>\n              </div>\n            </div>\n          </motion.div>\n        )}\n\n        {/* User Profile */}\n        {sidebarOpen && user && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"border-t border-secondary-200 p-3\"\n          >\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-8 h-8 bg-primary-100 rounded-full flex items-center justify-center\">\n                <span className=\"text-sm font-medium text-primary-700\">\n                  {user.name.charAt(0).toUpperCase()}\n                </span>\n              </div>\n              <div className=\"flex-1 min-w-0\">\n                <p className=\"text-sm font-medium text-secondary-900 truncate\">\n                  {user.name}\n                </p>\n                <p className=\"text-xs text-secondary-500 truncate\">\n                  {user.email}\n                </p>\n              </div>\n            </div>\n          </motion.div>\n        )}\n      </div>\n    </>\n  );\n};\n"