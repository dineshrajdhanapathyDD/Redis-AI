import React, { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport {\n  Search,\n  Users,\n  Code,\n  FileText,\n  Activity,\n  TrendingUp,\n  Zap,\n  Brain,\n  Database,\n  Clock,\n  BarChart3,\n  ArrowRight,\n} from 'lucide-react';\nimport { useWebSocket } from '../providers/WebSocketProvider';\nimport { LoadingSpinner } from '../components/ui/LoadingSpinner';\n\ninterface MetricCardProps {\n  title: string;\n  value: string | number;\n  change?: string;\n  icon: React.ElementType;\n  color: 'blue' | 'green' | 'purple' | 'orange';\n  loading?: boolean;\n}\n\nconst MetricCard: React.FC<MetricCardProps> = ({ \n  title, \n  value, \n  change, \n  icon: Icon, \n  color, \n  loading = false \n}) => {\n  const colorClasses = {\n    blue: 'bg-primary-50 text-primary-600 border-primary-200',\n    green: 'bg-success-50 text-success-600 border-success-200',\n    purple: 'bg-purple-50 text-purple-600 border-purple-200',\n    orange: 'bg-warning-50 text-warning-600 border-warning-200',\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      className=\"card\"\n    >\n      <div className=\"card-body\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <p className=\"text-sm font-medium text-secondary-600\">{title}</p>\n            {loading ? (\n              <div className=\"mt-2\">\n                <LoadingSpinner size=\"sm\" />\n              </div>\n            ) : (\n              <>\n                <p className=\"text-2xl font-bold text-secondary-900 mt-1\">{value}</p>\n                {change && (\n                  <p className=\"text-sm text-success-600 mt-1 flex items-center\">\n                    <TrendingUp size={14} className=\"mr-1\" />\n                    {change}\n                  </p>\n                )}\n              </>\n            )}\n          </div>\n          <div className={`p-3 rounded-lg border ${colorClasses[color]}`}>\n            <Icon size={24} />\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\ninterface QuickActionProps {\n  title: string;\n  description: string;\n  icon: React.ElementType;\n  href: string;\n  color: string;\n}\n\nconst QuickAction: React.FC<QuickActionProps> = ({ \n  title, \n  description, \n  icon: Icon, \n  href, \n  color \n}) => {\n  return (\n    <motion.a\n      href={href}\n      whileHover={{ scale: 1.02 }}\n      whileTap={{ scale: 0.98 }}\n      className=\"card hover:shadow-md transition-shadow cursor-pointer\"\n    >\n      <div className=\"card-body\">\n        <div className=\"flex items-start space-x-4\">\n          <div className={`p-3 rounded-lg ${color}`}>\n            <Icon size={20} className=\"text-white\" />\n          </div>\n          <div className=\"flex-1\">\n            <h3 className=\"font-semibold text-secondary-900\">{title}</h3>\n            <p className=\"text-sm text-secondary-600 mt-1\">{description}</p>\n            <div className=\"flex items-center mt-3 text-primary-600 text-sm font-medium\">\n              <span>Get started</span>\n              <ArrowRight size={14} className=\"ml-1\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </motion.a>\n  );\n};\n\nconst RecentActivity: React.FC = () => {\n  const activities = [\n    {\n      id: 1,\n      type: 'search',\n      description: 'Multi-modal search for \"machine learning algorithms\"',\n      time: '2 minutes ago',\n      icon: Search,\n    },\n    {\n      id: 2,\n      type: 'workspace',\n      description: 'New knowledge added to \"AI Research\" workspace',\n      time: '5 minutes ago',\n      icon: Users,\n    },\n    {\n      id: 3,\n      type: 'code',\n      description: 'Code analysis completed for React components',\n      time: '12 minutes ago',\n      icon: Code,\n    },\n    {\n      id: 4,\n      type: 'content',\n      description: 'Content generated for social media campaign',\n      time: '1 hour ago',\n      icon: FileText,\n    },\n  ];\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">\n        <h3 className=\"text-lg font-semibold text-secondary-900 flex items-center\">\n          <Activity size={20} className=\"mr-2 text-primary-600\" />\n          Recent Activity\n        </h3>\n      </div>\n      <div className=\"card-body\">\n        <div className=\"space-y-4\">\n          {activities.map((activity) => (\n            <motion.div\n              key={activity.id}\n              initial={{ opacity: 0, x: -20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ delay: activity.id * 0.1 }}\n              className=\"flex items-start space-x-3\"\n            >\n              <div className=\"p-2 bg-secondary-100 rounded-lg\">\n                <activity.icon size={16} className=\"text-secondary-600\" />\n              </div>\n              <div className=\"flex-1\">\n                <p className=\"text-sm text-secondary-900\">{activity.description}</p>\n                <p className=\"text-xs text-secondary-500 mt-1 flex items-center\">\n                  <Clock size={12} className=\"mr-1\" />\n                  {activity.time}\n                </p>\n              </div>\n            </motion.div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst SystemStatus: React.FC = () => {\n  const [metrics, setMetrics] = useState<any>(null);\n  const { isConnected, on, off } = useWebSocket();\n\n  useEffect(() => {\n    const handleMetricsUpdate = (data: any) => {\n      setMetrics(data.metrics);\n    };\n\n    on('system:metrics_update', handleMetricsUpdate);\n    \n    // Subscribe to system metrics\n    if (isConnected) {\n      // This would trigger the WebSocket to send metrics\n    }\n\n    return () => {\n      off('system:metrics_update', handleMetricsUpdate);\n    };\n  }, [isConnected, on, off]);\n\n  const statusItems = [\n    {\n      name: 'Redis Cluster',\n      status: 'healthy',\n      value: '99.9% uptime',\n      color: 'text-success-600',\n    },\n    {\n      name: 'AI Models',\n      status: 'operational',\n      value: '5 models active',\n      color: 'text-success-600',\n    },\n    {\n      name: 'Vector Search',\n      status: 'optimal',\n      value: '<50ms avg',\n      color: 'text-success-600',\n    },\n    {\n      name: 'WebSocket',\n      status: isConnected ? 'connected' : 'disconnected',\n      value: isConnected ? 'Real-time sync' : 'Reconnecting...',\n      color: isConnected ? 'text-success-600' : 'text-warning-600',\n    },\n  ];\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">\n        <h3 className=\"text-lg font-semibold text-secondary-900 flex items-center\">\n          <Database size={20} className=\"mr-2 text-primary-600\" />\n          System Status\n        </h3>\n      </div>\n      <div className=\"card-body\">\n        <div className=\"space-y-4\">\n          {statusItems.map((item, index) => (\n            <motion.div\n              key={item.name}\n              initial={{ opacity: 0, y: 10 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: index * 0.1 }}\n              className=\"flex items-center justify-between\"\n            >\n              <div>\n                <p className=\"text-sm font-medium text-secondary-900\">{item.name}</p>\n                <p className=\"text-xs text-secondary-500\">{item.value}</p>\n              </div>\n              <div className={`px-2 py-1 rounded-full text-xs font-medium ${item.color} bg-current bg-opacity-10`}>\n                {item.status}\n              </div>\n            </motion.div>\n          ))}\n        </div>\n        \n        {metrics && (\n          <div className=\"mt-6 pt-4 border-t border-secondary-200\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <p className=\"text-xs text-secondary-500\">CPU Usage</p>\n                <p className=\"text-sm font-medium text-secondary-900\">\n                  {Math.round(metrics.resources?.cpuUsage || 0)}%\n                </p>\n              </div>\n              <div>\n                <p className=\"text-xs text-secondary-500\">Memory</p>\n                <p className=\"text-sm font-medium text-secondary-900\">\n                  {Math.round(metrics.resources?.memoryUsage || 0)}%\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport const HomePage: React.FC = () => {\n  const [metricsLoading, setMetricsLoading] = useState(true);\n\n  useEffect(() => {\n    // Simulate loading metrics\n    const timer = setTimeout(() => {\n      setMetricsLoading(false);\n    }, 1500);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  const quickActions = [\n    {\n      title: 'Multi-Modal Search',\n      description: 'Search across text, images, audio, and code with natural language',\n      icon: Search,\n      href: '/search',\n      color: 'bg-primary-600',\n    },\n    {\n      title: 'Collaborative Workspace',\n      description: 'Work together with AI in shared knowledge environments',\n      icon: Users,\n      href: '/workspace',\n      color: 'bg-success-600',\n    },\n    {\n      title: 'Code Intelligence',\n      description: 'AI-powered code analysis, generation, and optimization',\n      icon: Code,\n      href: '/code',\n      color: 'bg-purple-600',\n    },\n    {\n      title: 'Content Management',\n      description: 'Generate and maintain consistent content across platforms',\n      icon: FileText,\n      href: '/content',\n      color: 'bg-warning-600',\n    },\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Welcome Section */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"bg-gradient-to-r from-primary-600 to-primary-800 rounded-xl p-8 text-white\"\n      >\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-3xl font-bold mb-2\">Welcome to Redis AI Platform</h1>\n            <p className=\"text-primary-100 text-lg\">\n              Harness the power of real-time AI with multi-modal search, intelligent routing, and collaborative workspaces.\n            </p>\n          </div>\n          <div className=\"hidden lg:block\">\n            <Brain size={80} className=\"text-primary-200\" />\n          </div>\n        </div>\n      </motion.div>\n\n      {/* Metrics Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <MetricCard\n          title=\"Active Searches\"\n          value={metricsLoading ? 0 : \"1,247\"}\n          change=\"+12% from last hour\"\n          icon={Search}\n          color=\"blue\"\n          loading={metricsLoading}\n        />\n        <MetricCard\n          title=\"Workspaces\"\n          value={metricsLoading ? 0 : \"23\"}\n          change=\"+3 new today\"\n          icon={Users}\n          color=\"green\"\n          loading={metricsLoading}\n        />\n        <MetricCard\n          title=\"AI Requests\"\n          value={metricsLoading ? 0 : \"8,942\"}\n          change=\"+18% from yesterday\"\n          icon={Zap}\n          color=\"purple\"\n          loading={metricsLoading}\n        />\n        <MetricCard\n          title=\"Response Time\"\n          value={metricsLoading ? 0 : \"47ms\"}\n          change=\"-5ms improvement\"\n          icon={BarChart3}\n          color=\"orange\"\n          loading={metricsLoading}\n        />\n      </div>\n\n      {/* Quick Actions */}\n      <div>\n        <h2 className=\"text-xl font-semibold text-secondary-900 mb-4\">Quick Actions</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {quickActions.map((action, index) => (\n            <motion.div\n              key={action.title}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: index * 0.1 }}\n            >\n              <QuickAction {...action} />\n            </motion.div>\n          ))}\n        </div>\n      </div>\n\n      {/* Activity and Status */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <RecentActivity />\n        <SystemStatus />\n      </div>\n    </div>\n  );\n};\n"