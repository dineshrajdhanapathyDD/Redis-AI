version: '3.8'

services:
  # Redis Stack with Vector Search capabilities
  redis-stack:
    image: redis/redis-stack:latest
    container_name: redis-ai-platform-stack
    ports:
      - "6379:6379"
      - "8001:8001"  # RedisInsight web interface
    environment:
      - REDIS_ARGS=--save 60 1000 --appendonly yes
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - redis-ai-network

  # Redis Cluster for production-like testing (optional)
  redis-node-1:
    image: redis/redis-stack:latest
    container_name: redis-cluster-node-1
    ports:
      - "7000:6379"
    command: >
      redis-server
      --port 6379
      --cluster-enabled yes
      --cluster-config-file nodes.conf
      --cluster-node-timeout 5000
      --appendonly yes
      --save 60 1000
    volumes:
      - redis_cluster_1:/data
    networks:
      - redis-ai-network
    profiles:
      - cluster

  redis-node-2:
    image: redis/redis-stack:latest
    container_name: redis-cluster-node-2
    ports:
      - "7001:6379"
    command: >
      redis-server
      --port 6379
      --cluster-enabled yes
      --cluster-config-file nodes.conf
      --cluster-node-timeout 5000
      --appendonly yes
      --save 60 1000
    volumes:
      - redis_cluster_2:/data
    networks:
      - redis-ai-network
    profiles:
      - cluster

  redis-node-3:
    image: redis/redis-stack:latest
    container_name: redis-cluster-node-3
    ports:
      - "7002:6379"
    command: >
      redis-server
      --port 6379
      --cluster-enabled yes
      --cluster-config-file nodes.conf
      --cluster-node-timeout 5000
      --appendonly yes
      --save 60 1000
    volumes:
      - redis_cluster_3:/data
    networks:
      - redis-ai-network
    profiles:
      - cluster

  # Application container (for development)
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: redis-ai-platform-app
    ports:
      - "3000:3000"
      - "9090:9090"  # Metrics port
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis-stack
      - REDIS_PORT=6379
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      redis-stack:
        condition: service_healthy
    networks:
      - redis-ai-network
    profiles:
      - app

volumes:
  redis_data:
  redis_cluster_1:
  redis_cluster_2:
  redis_cluster_3:

networks:
  redis-ai-network:
    driver: bridge